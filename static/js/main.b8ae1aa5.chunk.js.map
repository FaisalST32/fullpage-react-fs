{"version":3,"sources":["../../src/index.js","App.js","index.js"],"names":["FullPageContainer","showIndicators","props","panelsCount","React","windowHeight","useRef","window","useState","currentPanel","transitioning","currentTop","prevSection","setViewState","prev","setTimeout","nextSection","handleScroll","e","viewState","removeEventListeners","handleSwipe","handleDrag","useEffect","touchStartY","screenY","initialSet","difference","setCurrentPointer","isStart","event","touchEndY","touchDifference","panelsstyles","styles","className","screenPane","currentPointer","clickMask","style","top","count","activeIndex","setIndicator","sectionNumber","NavIndicators","indicatorHtml","Array","indicatorstyles","i","key","onClick","navIndicators","FullPagePanel","backgroundColor","bgColor","panelContent","App","href","target","textDecoration","color","fontWeight","fontSize","textAlign","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8ae1aa5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport styles from './styles.module.css'\n\nexport const FullPageContainer = ({ showIndicators = true, ...props }) => {\n  const panelsCount = React.Children.count(props.children)\n\n  const windowHeight = useRef(window.innerHeight)\n\n  const [viewState, setViewState] = useState({\n    currentPanel: 1,\n    transitioning: false,\n    currentTop: 0\n  })\n  const prevSection = () => {\n    setViewState((prev) => {\n      if (prev.transitioning) return prev\n      if (prev.currentPanel <= 1)\n        return {\n          ...prev,\n          currentTop: 0\n        }\n      setTimeout(() => {\n        setViewState((prev) => ({ ...prev, transitioning: false }))\n      }, 1000)\n      return {\n        transitioning: true,\n        currentPanel: prev.currentPanel - 1,\n        currentTop: -windowHeight.current * (prev.currentPanel - 2)\n      }\n    })\n  }\n\n  const nextSection = () => {\n    setViewState((prev) => {\n      if (prev.transitioning) return prev\n\n      if (prev.currentPanel >= panelsCount)\n        return {\n          ...prev,\n          currentTop: -windowHeight.current * (panelsCount - 1)\n        }\n      setTimeout(() => {\n        setViewState((prev) => ({ ...prev, transitioning: false }))\n      }, 1000)\n      return {\n        transitioning: true,\n        currentPanel: prev.currentPanel + 1,\n        currentTop: -windowHeight.current * prev.currentPanel\n      }\n    })\n  }\n\n  const restoreSection = () => {\n    setViewState((prev) => {\n      return {\n        ...prev,\n        currentTop: -windowHeight.current * (prev.currentPanel - 1)\n      }\n    })\n  }\n\n  const handleScroll = (e) => {\n    if (e.deltaY > 40 && viewState.currentPanel < panelsCount) {\n      nextSection()\n    } else if (e.deltaY < -40 && viewState.currentPanel > 0) {\n      prevSection()\n    }\n  }\n\n  const onSetSection = (sectionNumber) => {\n    setViewState((prev) => {\n      setTimeout(() => {\n        setViewState((prev) => ({ ...prev, transitioning: false }))\n      }, 1000)\n      return {\n        transitioning: true,\n        currentPanel: sectionNumber,\n        currentTop: -windowHeight.current * (sectionNumber - 1)\n      }\n    })\n  }\n\n  const removeEventListeners = () => {\n    window.removeEventListener('wheel', (e) => {\n      handleScroll(e)\n    })\n    window.removeEventListener('touchstart', (e) => {\n      handleSwipe(e, true)\n    })\n    window.removeEventListener('touchend', (e) => {\n      handleSwipe(e, false)\n    })\n    window.removeEventListener('pointerdown', (e) => {\n      handleSwipe(e.changedTouches[0].screenY, true)\n    })\n    window.removeEventListener('pointerup', (e) => {\n      handleSwipe(e.changedTouches[0].screenY, false)\n    })\n    window.removeEventListener('pointermove', (e) => {\n      handleDrag(e.screenY)\n    })\n\n    window.removeEventListener('resize', () => {\n      windowHeight.current = window.innerHeight\n    })\n  }\n\n  useEffect(() => {\n    removeEventListeners()\n    window.addEventListener('wheel', (e) => {\n      handleScroll(e)\n    })\n    window.addEventListener('touchstart', (e) => {\n      handleSwipe(e.changedTouches[0].screenY, true, e)\n    })\n    window.addEventListener('touchend', (e) => {\n      handleSwipe(e.changedTouches[0].screenY, false, e)\n    })\n    window.addEventListener('pointerdown', (e) => {\n      handleSwipe(e.screenY, true, e)\n    })\n    window.addEventListener('pointerup', (e) => {\n      handleSwipe(e.screenY, false, e)\n    })\n\n    window.addEventListener('pointermove', (e) => {\n      handleDrag(e.screenY)\n    })\n    window.addEventListener('touchmove', (e) => {\n      handleDrag(e.changedTouches[0].screenY)\n    })\n\n    window.addEventListener('resize', () => {\n      windowHeight.current = window.innerHeight\n    })\n    return () => {\n      removeEventListeners()\n    }\n  }, [])\n\n  const touchStartY = useRef(0)\n\n  const [currentPointer, setCurrentPointer] = useState(0)\n\n  const handleDrag = (screenY) => {\n    if (touchStartY.current === 0) {\n      return\n    }\n\n    let initialSet = false\n    let difference = 0\n    setCurrentPointer((prev) => {\n      if (prev === 0) {\n        initialSet = true\n        return screenY\n      }\n\n      difference = prev - screenY\n\n      if (\n        (difference < 0 && difference > -2) ||\n        (difference > 0 && difference < 2)\n      ) {\n        initialSet = true\n        return prev\n      }\n      return screenY\n    })\n    if (initialSet) return\n\n    setViewState((prev) => {\n      if (prev.transitioning) {\n        return prev\n      }\n      return { ...prev, currentTop: prev.currentTop - difference }\n    })\n  }\n\n  const handleSwipe = (screenY, isStart, event) => {\n    if (isStart) {\n      touchStartY.current = screenY\n      return\n    }\n\n    const touchEndY = screenY\n\n    const touchDifference = touchStartY.current - touchEndY\n\n    if (touchDifference < -100) {\n      prevSection()\n    } else if (touchDifference > 100) {\n      nextSection()\n    } else {\n      restoreSection()\n    }\n\n    touchStartY.current = 0\n    setCurrentPointer(0)\n  }\n\n  const panelsstyles = [styles.panelsContainer]\n  if (viewState.transitioning) {\n    panelsstyles.push(styles.panelTransitioning)\n  }\n\n  return (\n    <div className={styles.screenPane}>\n      {currentPointer !== 0 && <div className={styles.clickMask} />}\n      <div\n        className={panelsstyles.join(' ')}\n        style={{ top: `${viewState.currentTop}px` }}\n      >\n        {props.children}\n        {showIndicators && (\n          <NavIndicators\n            count={panelsCount}\n            activeIndex={viewState.currentPanel}\n            setIndicator={onSetSection}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst NavIndicators = ({ count, activeIndex, setIndicator }) => {\n  let indicatorHtml = null\n  if (count) {\n    indicatorHtml = Array(count)\n      .fill(0)\n      .map((item, i) => {\n        const indicatorstyles = [styles.indicator]\n        if (i === activeIndex - 1) {\n          indicatorstyles.push(styles.active)\n        }\n        return (\n          <div\n            key={i}\n            className={indicatorstyles.join(' ')}\n            onClick={() => {\n              setIndicator(i + 1)\n            }}\n          >\n            &#11044;\n          </div>\n        )\n      })\n  }\n  return <div className={styles.navIndicators}>{indicatorHtml}</div>\n}\n\nexport const FullPagePanel = ({ bgColor, ...props }) => {\n  return (\n    <div className={styles.fullPanel} style={{ backgroundColor: bgColor }}>\n      <div className={styles.panelContent}>{props.children}</div>\n    </div>\n  )\n}\n","import React from 'react'\n\nimport { FullPageContainer, FullPagePanel } from 'fullpage-react-fs'\nimport 'fullpage-react-fs/dist/index.css'\n\nconst App = () => {\n  return (\n    <FullPageContainer>\n      <FullPagePanel>\n        <div>\n          Use{' '}\n          <a\n            href='https://github.com/FaisalST32/fullpage-react-fs'\n            target='_blank'\n            style={{textDecoration: 'none', color: 'purple', fontWeight: 'bold'}}\n          >\n            fullpage-react-fs\n          </a>{' '}\n          to create beautiful webpages because\n        </div>\n        <div style={{ fontSize: '1.5rem', textAlign: 'center' }}>\n          <span style={{ fontSize: '4rem' }}>Sometimes</span>\n          <br /> all you need in Life\n        </div>\n      </FullPagePanel>\n      <FullPagePanel bgColor='azure'>\n        <div style={{ fontSize: '1.5rem', textAlign: 'center' }}>\n          is a little bit of\n          <br />\n          <span style={{ fontSize: '4rem', color: 'blue' }}>Color</span>\n        </div>\n      </FullPagePanel>\n      <FullPagePanel bgColor='#35437f'>\n        <div\n          style={{ fontSize: '1.5rem', textAlign: 'center', color: 'white' }}\n        >\n          and a little less\n          <br />\n          <span style={{ fontSize: '4rem', color: '#c8f193' }}>Scroll</span>\n          <br />\n          Touch or Drag to switch slides.<br/><br/><br/>\n          <a\n            href='https://github.com/FaisalST32/fullpage-react-fs'\n            target='_blank'\n            style={{textDecoration: 'none', color: 'white'}}\n          >\n            View on GitHub\n          </a>\n        </div>\n      </FullPagePanel>\n    </FullPageContainer>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}